build-production:
  environment:
    name: production
    url: https://pitchtalk.com
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - "docker build .
      --pull
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      --tag $CI_REGISTRY_IMAGE:prod
      --build-arg commit=$CI_COMMIT_SHORT_SHA
      --build-arg ipfs_token=$IPFS_TOKEN_PROD
      --build-arg auth_token=$NPM_AUTH_TOKEN
      --build-arg environment=mainnet"
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:prod
  only:
    - tags

build-staging:
  environment:
    name: staging
    url: https://pitchtalk.stage.hapi.farm
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - "docker build .
        --pull
        -t $CI_REGISTRY_IMAGE:stage
        --build-arg auth_token=$NPM_AUTH_TOKEN
        --build-arg ipfs_token=$IPFS_TOKEN_STAGE
        --build-arg commit=$CI_COMMIT_SHORT_SHA
        --build-arg environment=testnet"
    - docker push "$CI_REGISTRY_IMAGE:stage"
  only:
    - stage

deploy-staging:
  environment:
    name: staging
    url: https://pitchtalk.stage.hapi.farm
  image: argoproj/argocd
  stage: deploy
  script:
    - "argocd app actions run pitchtalk
        --server $ARGO_SERVER --grpc-web
        --auth-token $AUTH_TOKEN
        --kind Deployment
        --resource-name pitchtalk-frontend
        restart"
  only:
    - stage